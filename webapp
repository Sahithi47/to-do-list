<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            width: 300px;
        }

        h1 {
            text-align: center;
        }

        .input-section {
            display: flex;
            justify-content: space-between;
        }

        input[type="text"] {
            width: 70%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        button {
            padding: 10px;
            border: none;
            background-color: #28a745;
            color: white;
            cursor: pointer;
            border-radius: 3px;
        }

        button:hover {
            background-color: #218838;
        }

        .filter-section {
            margin-top: 20px;
            text-align: center;
        }

        .filter-btn {
            margin: 5px;
            background-color: #007bff;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 3px;
            cursor: pointer;
        }

        .filter-btn:hover {
            background-color: #0056b3;
        }

        ul {
            list-style: none;
            padding: 0;
        }

        li {
            background: #eee;
            padding: 10px;
            margin-bottom: 5px;
            border-radius: 3px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        li.completed {
            text-decoration: line-through;
            color: #888;
        }

        li button {
            background: transparent;
            border: none;
            color: #dc3545;
            cursor: pointer;
        }

        li button.edit {
            color: #ffc107;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <div class="input-section">
            <input type="text" id="new-task" placeholder="Add a new task">
            <button id="add-task-btn">Add Task</button>
        </div>
        <div class="filter-section">
            <button class="filter-btn" data-filter="all">All</button>
            <button class="filter-btn" data-filter="pending">Pending</button>
            <button class="filter-btn" data-filter="completed">Completed</button>
        </div>
        <ul id="task-list"></ul>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const taskInput = document.getElementById('new-task');
            const taskList = document.getElementById('task-list');
            const addTaskBtn = document.getElementById('add-task-btn');
            const filterButtons = document.querySelectorAll('.filter-btn');

            let tasks = [];

            // Add Task
            addTaskBtn.addEventListener('click', () => {
                const taskText = taskInput.value.trim();
                if (taskText !== '') {
                    const task = {
                        id: Date.now(),
                        text: taskText,
                        completed: false
                    };
                    tasks.push(task);
                    renderTasks();
                    taskInput.value = '';
                }
            });

            // Render Tasks
            function renderTasks(filter = 'all') {
                taskList.innerHTML = '';
                const filteredTasks = tasks.filter(task => {
                    if (filter === 'all') return true;
                    if (filter === 'pending') return !task.completed;
                    if (filter === 'completed') return task.completed;
                });

                filteredTasks.forEach(task => {
                    const li = document.createElement('li');
                    li.className = task.completed ? 'completed' : '';
                    li.innerHTML = `
                        <span>${task.text}</span>
                        <div>
                            <button class="edit" onclick="editTask(${task.id})">Edit</button>
                            <button onclick="deleteTask(${task.id})">Delete</button>
                            <input type="checkbox" ${task.completed ? 'checked' : ''} onclick="toggleTask(${task.id})">
                        </div>
                    `;
                    taskList.appendChild(li);
                });
            }

            // Edit Task
            window.editTask = (id) => {
                const task = tasks.find(task => task.id === id);
                const newTaskText = prompt('Edit Task', task.text);
                if (newTaskText !== null) {
                    task.text = newTaskText.trim();
                    renderTasks();
                }
            };

            // Delete Task
            window.deleteTask = (id) => {
                tasks = tasks.filter(task => task.id !== id);
                renderTasks();
            };

            // Toggle Task Completion
            window.toggleTask = (id) => {
                const task = tasks.find(task => task.id === id);
                task.completed = !task.completed;
                renderTasks();
            };

            // Filter Tasks
            filterButtons.forEach(btn => {
                btn.addEventListener('click', () => {
                    filterButtons.forEach(button => button.classList.remove('active'));
                    btn.classList.add('active');
                    const filter = btn.getAttribute('data-filter');
                    renderTasks(filter);
                });
            });

            renderTasks();
        });
    </script>
</body>
</html>
